import { useState, useEffect } from "react";

import Typography from "@mui/joy/Typography";
import Stack from "@mui/joy/Stack";
import Tooltip from "@mui/joy/Tooltip";
import Link from "@mui/joy/Link";

import ContentCopyIcon from "@mui/icons-material/ContentCopy";
import InfoOutlined from "@mui/icons-material/InfoOutlined";

import CopyButton from "./CopyButton";
import { getPublicationMetadata } from "../../utils/ExternalDataRetrieval";

export default function DoiCitation(props) {
  const doi = props.doi;

  const [citation, setCitation] = useState("");
  const [citationCopy, setCitationCopy] = useState("");

  useEffect(() => {
    async function retrieveInfo(doi) {
      const metadata = await getPublicationMetadata(doi);
      if (!metadata || metadata === "Publication not found") {
        return;
      }

      if (!metadata.title || !metadata.author) {
        return;
      }

      const title = metadata.title[0];
      const authors = metadata.author
        .map((author) => `${author.given} ${author.family}`)
        .join(", ");
      const year = metadata.issued["date-parts"][0][0];
      const journal = metadata["container-title"][0];
      const volume = metadata.volume || "N/A";
      const issue = metadata.issue || "N/A";
      const pageRange = metadata.page || "N/A";
      const doiReturned = metadata.DOI;

      const citationForCopy = `${authors}. "${title}." ${journal} ${volume}(${issue}) (${year}): ${pageRange}. https://doi.org/${doiReturned}`;

      setCitationCopy(citationForCopy);
      setCitation(
        <Typography>
          {authors}.&nbsp;"
          {title}."&nbsp;
          <em>{journal}</em>&nbsp;
          {volume}({issue})&nbsp;({year}):&nbsp;
          {pageRange}.&nbsp;
          <Link
            href={`https://doi.org/${doiReturned}`}
            target="_blank"
            rel="noopener noreferrer"
            underline="always"
          >
            {`https://doi.org/${doiReturned}`}
          </Link>
        </Typography>
      );
    }

    retrieveInfo(doi);
  }, [doi]);

  if (!citation) {
    return;
  }

  return (
    <Stack spacing={2} sx={{ py: 3 }}>
      <Stack direction="row" spacing={1} alignItems="center">
        <Typography level="h5" fontWeight="lg" mb={1}>
          Cite this publication
        </Typography>
        <Tooltip title="Citation generated by Crossref" placement="top">
          <InfoOutlined size="lg" />
        </Tooltip>
        <CopyButton
          textToCopy={citationCopy}
          tooltipText="Copy citation"
          successText="Citation copied!"
          icon={<ContentCopyIcon />}
        />
      </Stack>
      {citation}
    </Stack>
  );
}
